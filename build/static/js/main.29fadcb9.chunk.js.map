{"version":3,"sources":["logo.svg","serviceWorker.js","services/CourseService.js","components/CourseRowComponent.js","containers/CourseTableContainer.js","components/CourseCardComponent.js","containers/CourseGridContainer.js","services/ModuleService.js","services/LessonService.js","services/TopicService.js","services/WidgetService.js","components/LessonTabsComponent.js","actions/lessonsActions.js","components/ModuleListComponent.js","actions/moduleActions.js","components/TopicPillsComponent.js","actions/topicsActions.js","components/HeadingWidgetComponent.js","components/ParagraphWidgetComponent.js","components/WidgetListComponent.js","containers/CourseEditorContainer.js","containers/CourseManagerContainer.js","reducers/modulesReducer.js","reducers/lessonsReducer.js","reducers/topicsReducer.js","reducers/courseReducer.js","reducers/widgetReducer.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","url","createCourse","course","fetch","method","body","JSON","stringify","headers","then","response","json","deleteCourse","id","CourseRowComponent","state","editing","courseTitle","props","updateTitle","event","newTitle","target","value","title","setState","updateCourse","CourseService","_id","this","onChange","to","owner","lastUpdated","onClick","className","React","Component","CourseTableContainer","courses","createTitle","newCourse","actualCourse","prevState","catch","error","console","log","status","filter","c","style","fontSize","htmlFor","placeholder","type","map","key","CourseCardComponent","styles","width","src","CourseGridContainer","moduleUrl","courseId","moduleId","lessonUrl","lesson","lessonId","header","topicUrl","topic","topicId","topicsUrl","widgetsUrl","widget","widgetId","connect","lessons","lessonReducer","courseReducer","dispatch","deleteLesson","LessonService","createLesson","actualLesson","editLesson","modules","moduleReducer","deleteModule","moduleService","createModule","actualModule","updateModule","class","topics","topicReducer","createTopic","TopicService","deleteTopic","updateTopic","HeadingWidgetComponent","updateWidget","name","ParagraphWidgetComponent","updateWidgetName","updateWidgetText","newText","text","widgets","widgetReducer","createWidgetForTopic","widgetService","deleteWidget","deletedWidget","updatedWidget","moveWidgetUp","updatedList","moveWidgetDown","movement","size","CourseEditorContainer","params","findCourseById","findModulesForCourse","findLessonsForModule","findTopicsForLesson","findWidgetsForTopic","prevProps","snapshot","previousModuleId","previousLessonId","previousTopicId","courseService","actualModules","lessonService","topicService","CourseManagerContainer","path","render","exact","component","initialState","action","rootReducer","combineReducers","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.29fadcb9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const url = \"http://wbdv-generic-server.herokuapp.com/api/001418910/courses\"\n\nexport const createCourse = (course) => {\n    return fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(course),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n}\n\nexport const findAllCourses = () => {\n    return fetch(url)\n        .then(response => response.json())\n}\n\nexport const findCourseById = (id) => {\n    return fetch(`${url}/${id}`)\n        .then(response => response.json())\n}\n\nexport const updateCourse = (id, course) => {\n    return fetch(`${url}/${id}`, {\n        method: \"PUT\",\n        body: JSON.stringify(course),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n}\n\nexport const deleteCourse = (id) => {\n    return fetch(`${url}/${id}`, {\n        method: \"DELETE\",\n    })\n        .then(response => response.json())\n}\n\nexport default {\n    findAllCourses, deleteCourse, createCourse, findCourseById, updateCourse\n}","import React from \"react\";\nimport \"../styling/CourseRow.style.client.css\";\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport {BrowserRouter as Router, Link, Route} from \"react-router-dom\";\nimport CourseService from \"../services/CourseService\";\n\nexport class CourseRowComponent extends React.Component {\n\n    state = {\n        editing: false,\n        courseTitle: \"\",\n        course: this.props.course\n    }\n\n    updateTitle = (event) => {\n        const newTitle = event.target.value\n        const course = {...this.state.course}\n        course.title = newTitle\n        this.setState({\n            course: course\n        })\n    }\n\n    updateCourse = () => {\n        this.setState({editing:false})\n        CourseService.updateCourse(this.state.course._id, this.state.course)\n    }\n\n\n\n    render() {\n        return(\n            <tr>\n                <td>\n                    {\n                        this.state.editing === true &&\n                        <input\n                            onChange={this.updateTitle}\n                            value={this.state.course.title}/>\n                    }\n                    {\n                        this.state.editing === false &&\n                        <div>\n                            <Link to={`/edit/${this.state.course._id}`}>\n                                {this.state.course.title}\n                            </Link>\n                        </div>\n                    }\n                </td>\n                <td>{this.props.course.owner}</td>\n                <td>{this.props.course.lastUpdated}</td>\n                <td>\n                    <i onClick={() => this.props.deleteCourse(this.props.course)}\n                       className=\"fa fa-trash float-right pad-element\"/>\n                    {\n                        !this.state.editing &&\n                            <i onClick={() => this.setState({editing: true})}\n                               className=\"fa fa-edit float-right pad-element\"/>\n                    }\n                    {\n                        this.state.editing &&\n                        <i onClick={this.updateCourse}\n                           className=\"fa fa-check-square\"/>\n                    }\n                </td>\n            </tr>\n        )\n    }\n}\n\n","import React from \"react\";\nimport \"../styling/CourseTable.style.client.css\";\nimport CourseService from \"../services/CourseService\";\nimport {CourseRowComponent} from \"../components/CourseRowComponent\";\nimport {createCourse, deleteCourse} from \"../services/CourseService\";\nimport {Link} from \"react-router-dom\";\n\nexport class CourseTableContainer extends React.Component {\n\n    state = {\n        courses: []\n    }\n\n    componentDidMount() {\n        CourseService.findAllCourses()\n            .then(courses => this.setState({\n                courses: courses\n            }))\n    }\n\n    createTitle = (event) => {\n        const courseTitle = event.target.value\n        const newCourse = {\n            title: courseTitle,\n            owner: \"me\",\n            lastUpdated: \"today\"\n        }\n        this.setState({\n            course: newCourse\n        })\n    }\n\n    createCourse = () => {\n        createCourse(this.state.course)\n            .then(actualCourse => this.setState(function (prevState) {\n                return {\n                    courses: [\n                        ...prevState.courses, actualCourse\n                    ]\n                }\n            }))\n            .catch(error => {})\n        console.log(this.props.courses)\n    }\n\n    deleteCourse = (course) => {\n        deleteCourse(course._id)\n            .then(status => this.setState(prevState => ({\n                    courses: prevState.courses.filter(c => c._id !== course._id)\n                })\n                )\n            )\n    }\n\n    render() {\n        return(\n            <div className=\"container element-color\">\n            <form>\n                <h1 className=\"wbdv-sticky-h1 form-row\">\n                    <div className=\"col-md-auto\">\n                        <i className=\"fa fa-bars\"/>\n                    </div>\n                    <div className=\"col-md-auto float-left pad-top\" style={{fontSize:25}}>\n                        <label htmlFor=\"courseManager\">Course Manager</label>\n                    </div>\n                    <div className=\"col form-group pad-top\">\n\n                        <input id=\"courseManager\"\n                               placeholder=\"New Course Title\"\n                               type=\"text\"\n                               className=\"form-control\"\n                               onChange={this.createTitle}/>\n\n                    </div>\n                    <div className=\"col-md-auto float-right pad-top\">\n                        <i className=\"fa fa-plus\" onClick={this.createCourse}/>\n                    </div>\n                </h1>\n            </form>\n            <table className=\"table element-color\">\n                <thead>\n                <tr>\n                    <th className=\"wbdv-header wbdv-title\">Title</th>\n                    <th className=\"wbdv-header wbdv-owner\">Owned By</th>\n                    <th className=\"wbdv-header wbdv-last-modified\">Last Modified</th>\n                    <th>\n                        <i className=\"fa fa-sort float-right pad-element\"/>\n                        <Link to=\"/course/grid\">\n                            <i className=\"fa fa-th-large float-right pad-element\"/>\n                        </Link>\n                        <Link to=\"/course/table\">\n                            <i className=\"fa fa-list float-right pad-element\"/>\n                        </Link>\n\n                    </th>\n                </tr>\n                </thead>\n                <tbody>\n                { this.state.courses.map((course) =>\n                    <CourseRowComponent\n                        course={course}\n                        key={course._id}\n                        deleteCourse={this.deleteCourse}/>\n                )}\n                </tbody>\n            </table>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport {Link} from \"react-router-dom\";\nimport CourseService from \"../services/CourseService\";\n\n\nexport class CourseCardComponent extends React.Component {\n    state = {\n        editing: false,\n        courseTitle: \"\",\n        course: this.props.course\n    }\n\n\n    updateTitle = (event) => {\n        const newTitle = event.target.value\n        const course = {...this.state.course}\n        course.title = newTitle\n        this.setState({\n            course: course\n        })\n    }\n\n    updateCourse = () => {\n        this.setState({editing:false})\n        CourseService.updateCourse(this.state.course._id, this.state.course)\n    }\n\n    render() {\n        return(\n            <div className=\"card bg-dark\" styles={{width: '18rem'}}>\n                <img className=\"card-img-top\"\n                     src=\"https://picsum.photos/300/200\"/>\n                <div className=\"card-body\">\n                    {\n                        this.state.editing === true &&\n                        <input\n                            onChange={this.updateTitle}\n                            value={this.state.course.title}/>\n                    }\n                    {\n                        this.state.editing === false &&\n                        <Link to={`/edit/${this.state.course._id}`}>\n                            {this.state.course.title}\n                        </Link>\n                    }\n                    <p className=\"card-text\">{this.props.course.owner}</p>\n                    <p className=\"card-text\">{this.props.course.lastUpdated}</p>\n\n                    <Link to={`/edit/${this.state.course._id}`}>More...</Link>\n                    <i onClick={() => this.props.deleteCourse(this.props.course)}\n                       className=\"fa fa-trash float-right pad-element element-color\"/>\n                    {\n                        !this.state.editing &&\n                        <i onClick={() => this.setState({editing: true})}\n                           className=\"fa fa-edit float-right pad-element element-color\"/>\n                    }\n                    {\n                        this.state.editing &&\n                        <i onClick={this.updateCourse}\n                           className=\"fa fa-check-square float-right pad-element element-color\"/>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\n","import React from \"react\";\nimport CourseService from \"../services/CourseService\";\nimport {CourseCardComponent} from \"../components/CourseCardComponent\";\nimport {createCourse, deleteCourse} from \"../services/CourseService\";\nimport {Link} from \"react-router-dom\";\n\nexport class CourseGridContainer extends React.Component {\n    state = {\n        courses: []\n    }\n\n    componentDidMount() {\n        CourseService.findAllCourses()\n            .then(courses => this.setState({\n                courses: courses\n            }))\n    }\n\n    createTitle = (event) => {\n        const courseTitle = event.target.value\n        const newCourse = {\n            title: courseTitle,\n            owner: \"me\",\n            lastUpdated: \"today\"\n        }\n        this.setState({\n            course: newCourse\n        })\n    }\n\n    createCourse = () => {\n        createCourse(this.state.course)\n            .then(actualCourse => this.setState(function (prevState) {\n                return {\n                    courses: [\n                        ...prevState.courses, actualCourse\n                    ]\n                }\n            }))\n            .catch(error => {})\n        console.log(this.props.courses)\n    }\n\n    deleteCourse = (course) => {\n        deleteCourse(course._id)\n            .then(status => this.setState(prevState => ({\n                    courses: prevState.courses.filter(c => c._id !== course._id)\n                })\n                )\n            )\n    }\n\n    render() {\n        return(\n            <div className=\"container element-color\">\n                <form>\n                    <h1 className=\"wbdv-sticky-h1 form-row\">\n                        <div className=\"col-md-auto\">\n                            <i className=\"fa fa-bars\"/>\n                        </div>\n                        <div className=\"col-md-auto pad-top\" style={{fontSize:25}}>\n                            <label htmlFor=\"courseManager\">Course Manager</label>\n                        </div>\n                        <div className=\"form-group col pad-top\">\n\n                            <input id=\"courseManager\"\n                                   placeholder=\"New Course Title\"\n                                   type=\"text\"\n                                   className=\"form-control\"\n                                   onChange={this.createTitle}/>\n\n                        </div>\n                        <div className=\"col-md-auto float-right pad-top\">\n                        <i className=\"fa fa-plus\" onClick={this.createCourse}/>\n                        </div>\n                    </h1>\n                </form>\n                <table className=\"table element-color\">\n                    <tbody>\n                    <tr>\n                        <th className=\"wbdv-header wbdv-title\">Title</th>\n                        <th className=\"wbdv-header wbdv-owner\">Owned By</th>\n                        <th className=\"wbdv-header wbdv-last-modified\">Last Modified</th>\n                        <th>\n                            <i className=\"fa fa-sort float-right pad-element\"/>\n                            <Link to=\"/course/grid\">\n                                <i className=\"fa fa-th-large float-right pad-element\"/>\n                            </Link>\n                            <Link to=\"/course/table\">\n                                <i className=\"fa fa-list float-right pad-element\"/>\n                            </Link>\n                        </th>\n                    </tr>\n                    </tbody>\n                    </table>\n            <div className=\"card-deck\">\n                { this.state.courses.map((course) =>\n                    <CourseCardComponent\n                        course={course}\n                        key={course._id}\n                        deleteCourse={this.deleteCourse}/>\n                )}\n            </div>\n            </div>\n        )\n    }\n}\n\n","const url = \"https://wbdv-generic-server.herokuapp.com/api/001418910/courses\"\nconst moduleUrl = \"https://wbdv-generic-server.herokuapp.com/api/001418910/modules\"\n\nexport const createModuleForCourse = (courseId, module) =>\n    fetch(`${url}/${courseId}/modules`, {\n        method: \"POST\",\n        body: JSON.stringify(module),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    })\n        .then(response => response.json())\n\nexport const findModulesForCourse = (courseId) =>\n    fetch(`${url}/${courseId}/modules`)\n        .then(response => response.json())\n\nexport const findModule = (moduleId) =>\n    fetch(`${moduleUrl}/${moduleId}`)\n        .then(response => response.json())\n\nexport const updateModule = (moduleId, module) =>\n    fetch(`${moduleUrl}/${moduleId}`, {\n        method: \"PUT\",\n        body: JSON.stringify(module),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    })\n        .then(response => response.json())\n\nexport const deleteModule = (moduleId) =>\n    fetch(`${moduleUrl}/${moduleId}`, {\n        method: \"DELETE\"\n    })\n        .then(response => response.json())\n\nexport default {\n    createModuleForCourse,\n    findModulesForCourse,\n    findModule,\n    updateModule,\n    deleteModule\n}","const moduleUrl = \"https://wbdv-generic-server.herokuapp.com/api/001418910/modules\"\nconst lessonUrl = \"https://wbdv-generic-server.herokuapp.com/api/001418910/lessons\"\n\nexport const createLessonForModule = (moduleId, lesson) =>\n    fetch(`${moduleUrl}/${moduleId}/lessons`, {\n        method: \"POST\",\n        body: JSON.stringify(lesson),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n\nexport const findLessonsForModule = (moduleId) =>\n    fetch(`${moduleUrl}/${moduleId}/lessons`)\n        .then(response => response.json())\n\nexport const findLesson = (lessonId) =>\n    fetch(`${lessonUrl}/${lessonId}`)\n        .then(response => response.json())\n\nexport const updateLesson = (lessonId, lesson) =>\n    fetch(`${lessonUrl}/${lessonId}`, {\n        method: \"PUT\",\n        body: JSON.stringify(lesson),\n        header: {\n            'content-type': 'application.json'\n        }\n    })\n        .then(response => response.json())\n\nexport const deleteLesson = (lessonId) =>\n    fetch(`${lessonUrl}/${lessonId}`, {\n        method: \"DELETE\",\n    })\n        .then(response => response.json())\n\nexport default {\n    createLessonForModule,\n    findLessonsForModule,\n    findLesson,\n    updateLesson,\n    deleteLesson\n}","const lessonUrl = \"https://wbdv-generic-server.herokuapp.com/api/001418910/lessons\"\nconst topicUrl = \"https://wbdv-generic-server.herokuapp.com/api/001418910/topics\"\n\nexport const createTopicForLesson = (lessonId, topic) =>\n    fetch(`${lessonUrl}/${lessonId}/topics`, {\n        method: \"POST\",\n        body: JSON.stringify(topic),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n\nexport const findTopicsForLesson = (lessonId) =>\n    fetch(`${lessonUrl}/${lessonId}/topics`)\n        .then(response => response.json())\n\nexport const findTopic = (topicId) =>\n    fetch(`${topicUrl}/${topicId}`)\n        .then(response => response.json())\n\nexport const updateTopic = (topicId, topic) =>\n    fetch(`${topicUrl}/${topicId}`, {\n        method: \"PUT\",\n        body: JSON.stringify(topic),\n        header: {\n            'content-type': 'application.json'\n        }\n    })\n        .then(response => response.json())\n\nexport const deleteTopic = (topicId) =>\n    fetch(`${topicUrl}/${topicId}`, {\n        method: \"DELETE\",\n    })\n        .then(response => response.json())\n\nexport default {\n    createTopicForLesson,\n    findTopicsForLesson,\n    findTopic,\n    updateTopic,\n    deleteTopic\n}","const topicsUrl = \"http://localhost:8080/api/topics\"\nconst widgetsUrl = \"http://localhost:8080/api/widgets\"\n\nexport const createWidgetForTopic = (topicId, widget) => {\n    console.log(\"CREATE WIDGET FOR TOPIC SERVICES\")\n    return fetch(`${topicsUrl}/${topicId}/widgets`, {\n        method: \"POST\",\n        body: JSON.stringify({\n            ...widget,\n            topicId\n        }),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    })\n        .then(response => response.json())\n}\n\nexport const findWidgetsForTopic = (topicId) => {\n    return fetch(`${topicsUrl}/${topicId}/widgets`)\n        .then(response => response.json())\n}\n\nexport const findAllWidgets = () => {\n    return fetch(widgetsUrl)\n        .then(response => response.json())\n}\n\nexport const findWidgetById = (widgetId) => {\n    return fetch(`${widgetsUrl}/${widgetId}`)\n        .then(response => response.json())\n}\n\nexport const updateWidget = (widgetId, widget) => {\n    return fetch(`${widgetsUrl}/${widgetId}`, {\n        method: \"PUT\",\n        body: JSON.stringify(widget),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    })\n        .then(response => response.json())\n}\n\nexport const deleteWidget = (widgetId) => {\n    console.log(\"DELETING WIDGET SERVICES\")\n    console.log(widgetId)\n\n    return fetch(`${widgetsUrl}/${widgetId}`, {\n        method: \"DELETE\"\n    })\n        .then(response => response.json())\n}\n\nexport const moveWidgetUp = (widget, topicId) => {\n    return fetch(`${topicsUrl}/${topicId}/widgets`, {\n        method: \"PUT\",\n        body: JSON.stringify({\n            ...widget,\n            topicId\n        }),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    })\n        .then(response => response.json())\n}\n\nexport const moveWidgetDown = (widget, topicId) => {\n    return fetch(`${topicsUrl}/${topicId}/widgets`, {\n        method: \"PUT\",\n        body: JSON.stringify({\n            ...widget,\n            topicId\n        }),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    })\n        .then(response => response.json())\n}\n\nexport default {\n    createWidgetForTopic,\n    findWidgetsForTopic,\n    findAllWidgets,\n    findWidgetById,\n    updateWidget,\n    deleteWidget,\n    moveWidgetUp,\n    moveWidgetDown\n}","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n    deleteLesson,\n    createLesson,\n    editLesson\n} from \"../actions/lessonsActions\";\nimport {Link} from \"react-router-dom\";\n\nconst LessonTabsComponent = ({course, moduleId, lessons = [], deleteLesson, createLesson, editLesson}) =>\n    <div>\n        {console.log(\"INSIDE LESSON COMPONENT COURSE \" + course._id)}\n        {console.log(\"INSIDE LESSON COMPONENT \" + moduleId)}\n        <h1>Lessons</h1>\n        <ul className=\"nav nav-tabs\">\n            {\n                lessons.map(lesson=>\n                    <li key={lesson._id} className=\"nav-item\">\n\n                    {\n                        !lesson.editing &&\n                        <span>\n                            <label>\n                            <Link to={`/edit/${course._id}/modules/${moduleId}/lessons/${lesson._id}`}>\n                                {lesson.title}\n                            </Link>\n                            </label>\n                            <i onClick={() => editLesson({...lesson, editing: true})}\n                               className=\"fa fa-edit float-right pad-element element-color\"/>\n                        </span>\n                    }\n                    {\n                        lesson.editing &&\n                            <span>\n                                <input onChange={(event) =>\n                                    editLesson({...lesson, title: event.target.value})}\n                                value={lesson.title}/>\n                                <i onClick={() => editLesson({...lesson, editing: false})}\n                                   className=\"fa fa-check-square float-right pad-element element-color\"/>\n                                <i onClick={() => deleteLesson(lesson)}\n                                   className=\"fa fa-trash float-right pad-element element-color\"/>\n                            </span>\n                    }\n                    </li>\n                )\n            }\n            <i onClick={() => createLesson(moduleId, {title: \"New Lesson\"})} className=\"fa fa-plus-square\"/>\n        </ul>\n    </div>\n\nconst stateToPropertyMapper = (state) => ({\n    lessons: state.lessonReducer.lessons,\n    moduleId: state.lessonReducer.moduleId,\n    course: state.courseReducer.course\n})\n\nconst propertyToDispatchMapper = (dispatch) => ({\n    deleteLesson: (lesson) => deleteLesson(dispatch, lesson),\n    createLesson: (moduleId, lesson) => createLesson(dispatch, moduleId, lesson),\n    editLesson: (lesson) => editLesson(dispatch, lesson)\n})\n\nexport default connect\n(stateToPropertyMapper, propertyToDispatchMapper)\n(LessonTabsComponent)","import LessonService from \"../services/LessonService\";\nexport const DELETE_LESSON = \"DELETE_LESSON\"\nexport const CREATE_LESSON = \"CREATE_LESSON\"\nexport const EDIT_LESSON = \"EDIT_LESSON\"\n\nexport const createLesson = (dispatch, moduleId, lesson) => {\n    console.log(\"ACTION MODULE STATUS\")\n    console.log(moduleId)\n    LessonService.createLessonForModule(moduleId, lesson)\n        .then(actualLesson => dispatch({\n            type: CREATE_LESSON,\n            lesson: actualLesson\n        }))}\n\nexport const deleteLesson = (dispatch, lesson) =>\n    LessonService.deleteLesson(lesson._id)\n        .then(status => dispatch({\n        type: DELETE_LESSON,\n        lesson: lesson\n    }))\n\n\nexport const editLesson = (dispatch, lesson) =>\n    LessonService.updateLesson(lesson._id, lesson)\n        .then(status => dispatch({\n            type: EDIT_LESSON,\n            lesson: lesson\n    }))","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport {connect} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport {\n    deleteModule,\n    updateModule,\n    createModule,\n    findModulesForCourse,\n    findModule\n} from \"../actions/moduleActions\";\n\nconst ModuleListComponent = ({course, modules = [], deleteModule, createModule, updateModule}) =>\n    <div>\n        {console.log(\"INSIDE MODULE COMPONENT \" + course._id)}\n        <h1>Modules</h1>\n        <ul class=\"list-group\">\n            {\n                modules.map(module =>\n                    <li key={module._id} class=\"list-group-item\">\n\n                            {\n                                module.editing &&\n                                <span>\n                                <i onClick={() => updateModule({...module, editing: false})}\n                                        className=\"fa fa-check-square float-right pad-element element-color\"/>\n                                <i onClick={() => deleteModule(module)}\n                                   className=\"fa fa-trash float-right pad-element element-color\"/>\n                                <input\n                                    onChange={(event) => updateModule({...module, title: event.target.value})}\n                                    value={module.title}/>\n                                </span>\n                            }\n                            {\n                                !module.editing &&\n                                <label>\n                                    <i onClick={() => updateModule({...module, editing: true})}\n                                            className=\"fa fa-edit float-right pad-element element-color\"/>\n                                    <Link to={`/edit/${course._id}/modules/${module._id}`}>\n                                    {module.title}\n                                    </Link>\n                                </label>\n                            }\n                    </li>\n                )\n            }\n        </ul>\n        <i onClick={() => createModule(course, {title: \"New Module\"})} className=\"fa fa-plus-square\"/>\n    </div>\n\nconst stateToPropertyMapper = (state) => ({\n    modules: state.moduleReducer.modules,\n    course: state.courseReducer.course\n})\n\nconst propertyToDispatchMapper = (dispatch) => ({\n    deleteModule: (module) => deleteModule(dispatch, module),\n    createModule: (course, module) => createModule(dispatch, course, module),\n    updateModule: (module) => updateModule(dispatch, module),\n    // findModulesForCourse: (course) => findModulesForCourse(dispatch, course),\n    // findModule: (module) => findModule(dispatch, module)\n})\n\n\nexport default connect\n(stateToPropertyMapper, propertyToDispatchMapper)\n(ModuleListComponent)","import moduleService from \"../services/ModuleService\"\nexport const DELETE_MODULE = \"DELETE_MODULE\"\nexport const CREATE_MODULE = \"CREATE_MODULE\"\nexport const UPDATE_MODULE = \"UPDATE_MODULE\"\n\nexport const createModule = (dispatch, course, module) => {\n    console.log(course._id)\n    moduleService.createModuleForCourse(course._id, module)\n        .then(actualModule => dispatch({\n            type: CREATE_MODULE,\n            module: actualModule\n        }))}\n\nexport const findModulesForCourse = (dispatch, course) =>\n    moduleService.findModulesForCourse(course._id)\n        .then(modules => dispatch ({\n            type: \"FIND_MODULES_FOR_COURSE\",\n            modules: modules\n        }))\n\nexport const findModule = (dispatch, module) =>\n    moduleService.findModule(module._id)\n        .then(module => dispatch ({\n            type: \"FIND_MODULE_BY_ID\",\n            module: module\n        }))\n\nexport const updateModule = (dispatch, module) =>\n    moduleService.updateModule(module._id, module)\n        .then(status => dispatch({\n            type: UPDATE_MODULE,\n            module: module\n        }))\n\nexport const deleteModule = (dispatch, module) =>\n    moduleService.deleteModule(module._id)\n        .then(status => dispatch({\n            type: DELETE_MODULE,\n            module: module\n        }))\n\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n    createTopic,\n    deleteTopic,\n    updateTopic\n} from \"../actions/topicsActions\";\nimport {Link} from \"react-router-dom\";\n\nconst TopicPillsComponent = ({course, moduleId, lessonId, topics = [], createTopic, deleteTopic, updateTopic}) =>\n    <div>\n        <ul>\n            <li>\n                <Link to={`/edit/5f8e46ca7c74f50017f7d47e/modules/5f989ad03f5a280017e19fcc/lessons/5f98c8726c80d00017aeddb9/topics/topic123`}>\n                    Topic 123\n                </Link>\n            </li>\n            <li>\n                <Link to={`/edit/5f8e46ca7c74f50017f7d47e/modules/5f989ad03f5a280017e19fcc/lessons/5f98c8726c80d00017aeddb9/topics/topic234`}>\n                    Topic 234\n                </Link>\n            </li>\n        </ul>\n        <ul className=\"nav nav-pills\">\n            {\n                topics.map (topic =>\n                    <li key={topic._id} className=\"nav-item\">\n                        <Link to={`/edit/${course._id}/modules/${moduleId}/lessons/${lessonId}/topics/${topic._id}`}>\n                        {\n                            !topic.editing &&\n                                <span>\n                                    <label>{topic.title}</label>\n                                    <i onClick={() => updateTopic({...topic, editing:true})}\n                                       className=\"fa fa-edit float-right pad-element element-color\"/>\n                                </span>\n                        }\n                        {\n                            topic.editing &&\n                                <span>\n                                    <input onChange={(event) =>\n                                        updateTopic({...topic, title: event.target.value})}\n                                        value={topic.title}/>\n                                    <i onClick={() => updateTopic({...topic, editing:false})}\n                                       className=\"fa fa-check-square float-right pad-element element-color\"/>\n                                    <i onClick={() => deleteTopic(topic)}\n                                       className=\"fa fa-trash float-right pad-element element-color\"/>\n                                </span>\n                        }\n                        </Link>\n                    </li>\n                )\n            }\n            <i onClick={() => createTopic(lessonId, {title: \"New Topic\"})} className=\"fa fa-plus-square\"/>\n        </ul>\n    </div>\n\nconst stateToPropertyMapper = (state) => ({\n    topics: state.topicReducer.topics,\n    lessonId: state.topicReducer.lessonId,\n    moduleId: state.lessonReducer.moduleId,\n    course: state.courseReducer.course\n})\n\nconst propertyToDispatchMapper = (dispatch) => ({\n    createTopic: (lessonId, topic) => createTopic(dispatch, lessonId, topic),\n    deleteTopic: (topic) => deleteTopic(dispatch, topic),\n    updateTopic: (topic) => updateTopic(dispatch, topic)\n})\n\nexport default connect\n(stateToPropertyMapper, propertyToDispatchMapper)\n(TopicPillsComponent)","import TopicService from \"../services/TopicService\"\n\nexport const DELETE_TOPIC = \"DELETE_TOPIC\"\nexport const CREATE_TOPIC = \"CREATE_TOPIC\"\nexport const UPDATE_TOPIC = \"UPDATE_TOPIC\"\n\nexport const deleteTopic = (dispatch, topic) =>\n    TopicService.deleteTopic(topic._id)\n        .then(dispatch ({\n        type: DELETE_TOPIC,\n        topic: topic\n    }))\n\nexport const createTopic = (dispatch, lessonId, topic) =>\n    TopicService.createTopicForLesson(lessonId, topic)\n        .then(dispatch ({\n        type: CREATE_TOPIC,\n        topic: topic\n    }))\n\nexport const updateTopic = (dispatch, topic) =>\n    TopicService.updateTopic(topic._id, topic)\n        .then(dispatch ({\n        type: UPDATE_TOPIC,\n        topic: topic\n    }))\n\n","import React from \"react\";\n\nexport class HeadingWidgetComponent extends React.Component {\n    state = {\n        widget: this.props.widget,\n        editing: this.props.editing,\n        updateWidget: this.props.updateWidget\n    }\n\n    updateWidget = (event) => {\n        const newTitle = event.target.value\n        const widget = {...this.props.widget}\n        this.props.updateWidget({...widget, name: newTitle})\n\n    }\n\n    render() {\n        return (\n\n\n            <div>\n                {\n                    this.state.editing &&\n                    <div>\n                        <i onClick={() => this.setState({editing: false})}\n                           className=\"fa fa-check-square float-right element-color\"/>\n                        <h3>Heading Widget</h3>\n                        <div>\n                            <input value={this.props.widget.name} className={\"form-control pad-top\"}\n                                   onChange={this.updateWidget}/>\n                        </div>\n\n                        <div>\n                            <h4>Preview</h4>\n                        </div>\n                        <div>\n                            {this.props.widget.name}\n                        </div>\n                    </div>\n                }\n                {\n                    !this.state.editing &&\n                    <div>\n                        <i onClick={() => this.setState({editing: true})}\n                           className=\"fa fa-edit float-right element-color\"/>\n                        <h3>Heading Widget</h3>\n                        <div className={\"col form-group\"}>\n                            <p>{this.props.widget.name}</p>\n                        </div>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\nexport default HeadingWidgetComponent;","import React from \"react\";\n\nexport class ParagraphWidgetComponent extends React.Component {\n\n    state = {\n        widget: this.props.widget,\n        editing: this.props.editing,\n        updateWidget: this.props.updateWidget\n    }\n\n    updateWidgetName = (event) => {\n        const newTitle = event.target.value\n        const widget = {...this.props.widget}\n        this.props.updateWidget({...widget, name: newTitle})\n    }\n\n\n    updateWidgetText = (event) => {\n        const newText = event.target.value\n        const widget = {...this.props.widget}\n        this.props.updateWidget({...widget, text: newText})\n    }\n\n    render() {\n        return (\n            <div>\n                {\n                    this.state.editing &&\n                    <div>\n                        <i onClick={() => this.setState({editing: false})}\n                           className=\"fa fa-check-square float-right element-color\"/>\n                        <div className={\"col form-group\"}>\n                            <h3>Paragraph Widget</h3>\n                        </div>\n                        <input value={this.props.widget.name} className={\"form-control pad-top\"}\n                               onChange={this.updateWidgetName}/>\n                        <div>\n                            <textarea value={this.props.widget.text} className={\"form-control\"}\n                                      onChange={this.updateWidgetText}/>\n                        </div>\n                        <div>\n                            <h4>Preview</h4>\n                        </div>\n                        <div>\n                            <p>Lorem ipsum</p>\n                        </div>\n                    </div>\n                }\n                {\n                    !this.state.editing &&\n                    <div>\n                        <i onClick={() => this.setState({editing: true})}\n                           className=\"fa fa-edit float-right element-color\"/>\n                        <h3>Paragraph Widget</h3>\n                        <div className={\"col form-group\"}>\n                            <p>{this.props.widget.name}</p>\n                            <p>{this.props.widget.text}</p>\n                        </div>\n                    </div>\n                }\n\n            </div>\n        )\n    }\n}\n\nexport default ParagraphWidgetComponent;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport widgetService from \"../services/WidgetService\"\nimport HeadingWidgetComponent from \"./HeadingWidgetComponent\";\nimport ParagraphWidgetComponent from \"./ParagraphWidgetComponent\";\n\nconst WidgetListComponent = (\n    {\n        widgets = [],\n        topicId,\n        createWidgetForTopic,\n        deleteWidget,\n        updateWidget,\n        moveWidgetUp,\n        moveWidgetDown\n    }\n) =>\n    <div>\n        <h3>Widgets</h3>\n        <div className=\"pad-element\">\n            {\n                widgets.map(widget =>\n                    <div key={widget.id} className=\"card pad-element\">\n                        <div className={\"col form-group\"}>\n                            <select className={\"float-right col-md-auto\"}\n                                    onChange={(event) =>\n                                        updateWidget({...widget, type: event.target.value})}>>\n                                <option value={\"HEADING\"}>Heading</option>\n                                <option value={\"PARAGRAPH\"}>Paragraph</option>\n                            </select>\n                            <i onClick={() => deleteWidget(widget)}\n                               className={\"fa fa-trash float-right col-md-auto element-color\"}/>\n                            <i className={\"fa fa-arrow-up float-right col-md-auto\"}\n                               onClick={() => moveWidgetUp({...widget, movement: \"up\"})}/>\n                            <i className={\"fa fa-arrow-down float-right col-md-auto\"}\n                               onClick={() => moveWidgetDown({...widget, movement: \"down\"})}/>\n\n                            <select className={\"float-right col-md-auto\"}\n                                    onChange={(event) =>\n                                        updateWidget({...widget, size: event.target.value})}>\n                                <option value={1}>Size 1</option>\n                                <option value={2}>Size 2</option>\n                                <option value={3}>Size 3</option>\n                                <option value={4}>Size 4</option>\n                                <option value={5}>Size 5</option>\n                                <option value={6}>Size 6</option>\n                            </select>\n                        </div>\n                        <div>\n                            {\n                                widget.size === 1 &&\n                                <h1>{widget.name}</h1>\n                            }\n                            {\n                                widget.size === 2 &&\n                                <h2>{widget.name}</h2>\n                            }\n                            {\n                                widget.size === 3 &&\n                                <h3>{widget.name}</h3>\n                            }\n                            {\n                                widget.size === 4 &&\n                                <h4>{widget.name}</h4>\n                            }\n                            {\n                                widget.size === 5 &&\n                                <h5>{widget.name}</h5>\n                            }\n                            {\n                                widget.size === 6 &&\n                                <h6>{widget.name}</h6>\n                            }\n                            {\n                                widget.type === \"HEADING\" &&\n                                <HeadingWidgetComponent widget={widget} editing={widget.editing}\n                                                        updateWidget={updateWidget}/>\n                            }\n                            {\n                                widget.type === \"PARAGRAPH\" &&\n                                <ParagraphWidgetComponent widget={widget} editing={widget.editing}\n                                                          updateWidget={updateWidget}/>\n                            }\n                        </div>\n                    </div>\n                )\n            }\n        </div>\n        <i onClick={() => createWidgetForTopic(topicId)} className=\"fa fa-plus-square\"/>\n    </div>\n\n\nconst stateToPropertyMapper = (state) => ({\n    widgets: state.widgetReducer.widgets,\n    topicId: state.widgetReducer.topicId\n})\n\nconst dispatchMapper = (dispatch) => ({\n    createWidgetForTopic: (topicId) =>\n        widgetService.createWidgetForTopic(topicId, {\n            name: \"NEW WIDGET\",\n            type: \"PARAGRAPH\"\n        }).then(widget => dispatch({\n            type: \"CREATE_WIDGET_FOR_TOPIC\",\n            widget\n        })),\n    deleteWidget: (widget) =>\n        widgetService.deleteWidget(widget.id)\n            .then(deletedWidget => dispatch({\n                type: \"DELETE_WIDGET\",\n                widget: deletedWidget\n            })),\n    updateWidget: (widget) =>\n        widgetService.updateWidget(widget.id, widget)\n            .then(updatedWidget => dispatch({\n                type: \"UPDATE_WIDGET\",\n                widget: updatedWidget\n            })),\n    moveWidgetUp: (widget) =>\n        widgetService.moveWidgetUp(widget)\n            .then(updatedList => dispatch({\n                type: \"MOVE_WIDGET_UP\",\n                widgets: updatedList\n            })),\n    moveWidgetDown: (widget) =>\n        widgetService.moveWidgetDown(widget)\n            .then(updatedList => dispatch({\n                type: \"MOVE_WIDGET_DOWN\",\n                widgets: updatedList\n            }))\n})\nexport default connect\n(stateToPropertyMapper, dispatchMapper)\n(WidgetListComponent);","import React from \"react\";\nimport courseService from \"../services/CourseService\";\nimport moduleService from \"../services/ModuleService\";\nimport lessonService from \"../services/LessonService\"\nimport topicService from \"../services/TopicService\";\nimport widgetService from \"../services/WidgetService\";\nimport {findWidgetsForTopic} from \"../services/WidgetService\";\nimport LessonTabsComponent from \"../components/LessonTabsComponent\";\nimport ModuleListComponent from \"../components/ModuleListComponent\";\nimport TopicPillsComponent from \"../components/TopicPillsComponent\";\nimport {connect} from \"react-redux\";\nimport WidgetListComponent from \"../components/WidgetListComponent\";\n\nexport class CourseEditorContainer extends React.Component{\n\n    componentDidMount() {\n        console.log(\"COMPONENT DID MOUNT\")\n        const courseId = this.props.match.params.courseId\n        const moduleId = this.props.match.params.moduleId\n        const lessonId = this.props.match.params.lessonId\n        const topicId = this.props.match.params.topicId\n        console.log(\"courseID: \" + courseId)\n        console.log(\"moduleID: \" + moduleId)\n        console.log(\"lessonID: \" + lessonId)\n        console.log(\"topicID: \" + topicId)\n        this.props.findCourseById(courseId)\n        this.props.findModulesForCourse(courseId)\n        if(moduleId) {\n            this.props.findLessonsForModule(moduleId)\n        }\n        if (lessonId) {\n            this.props.findTopicsForLesson(lessonId)\n        }\n        if (topicId) {\n            this.props.findWidgetsForTopic(topicId)\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        console.log(\"COMPONENT DID UPDATE\")\n        const moduleId = this.props.match.params.moduleId\n        const previousModuleId = prevProps.match.params.moduleId\n        const lessonId = this.props.match.params.lessonId\n        const previousLessonId = prevProps.match.params.lessonId\n        const topicId = prevProps.match.params.topicId\n        const previousTopicId = this.props.match.params.topicId\n\n        console.log(\"updated moduleID: \" + moduleId)\n        console.log(\"updated lessonID: \" + lessonId)\n        console.log(\"updated topicID: \" + topicId)\n\n        if(moduleId !== previousModuleId) {\n            this.props.findLessonsForModule(moduleId)\n        }\n\n        if (lessonId !== previousLessonId) {\n            this.props.findTopicsForLesson(lessonId)\n        }\n\n        if (topicId !== previousTopicId) {\n            this.props.findWidgetsForTopic(topicId)\n        }\n\n    }\n\n    render() {\n        return(\n            <div className=\"element-color\">\n                <h1>CourseEditor</h1>\n                <div className=\"row\">\n                    <div className=\"col-4\">\n                        <ModuleListComponent/>\n                    </div>\n                    <div className=\"col-8\">\n                        <LessonTabsComponent/>\n                        <TopicPillsComponent/>\n                        <WidgetListComponent/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst stateToProperty = (state) => ({\n    course: state.courseReducer.course\n})\n\nconst propertyToDispatchMapper = (dispatch) => ({\n\n    findCourseById: (courseId) => courseService.findCourseById(courseId)\n        .then(actualCourse => dispatch({\n            type: \"FIND_COURSE_BY_ID\",\n            course: actualCourse\n        })),\n    findModulesForCourse: courseId => moduleService.findModulesForCourse(courseId)\n        .then(actualModules => dispatch({\n            type: \"FIND_MODULES_FOR_COURSE\",\n            modules: actualModules\n        })),\n    findLessonsForModule: moduleId => lessonService.findLessonsForModule(moduleId)\n        .then(lessons => dispatch({\n            type: \"FIND_LESSONS_FOR_MODULE\",\n            lessons: lessons,\n            moduleId: moduleId\n        })),\n    findTopicsForLesson: lessonId => topicService.findTopicsForLesson(lessonId)\n        .then(topics => dispatch({\n            type: \"FIND_TOPICS_FOR_LESSON\",\n            topics: topics,\n            lessonId: lessonId\n        })),\n    findWidgetsForTopic: (topicId) => widgetService.findWidgetsForTopic(topicId)\n        .then(widgets => dispatch({\n            type:\"FIND_WIDGETS_FOR_TOPIC\",\n            widgets: widgets,\n            topicId: topicId\n        }))\n})\n\nexport default connect\n(stateToProperty, propertyToDispatchMapper)\n(CourseEditorContainer)","import React from \"react\";\nimport \"../styling/styles.css\";\nimport \"../styling/CourseManager.style.client.css\";\nimport {BrowserRouter as Router, Link, Route} from \"react-router-dom\";\nimport CourseService from \"../services/CourseService\";\nimport {CourseTableContainer} from \"./CourseTableContainer\";\nimport {CourseGridContainer} from \"./CourseGridContainer\";\nimport CourseEditorContainer from \"./CourseEditorContainer\";\n\nexport class CourseManagerContainer extends React.Component {\n\n    render() {\n        return(\n            <Router>\n                <div>\n                    <Route path=\"/course/table\"\n                           render={() => <CourseTableContainer/>}/>\n                    <Route path=\"/course/grid\"\n                           render={() => <CourseGridContainer/>}/>\n                    <Route path={[\n                        \"/edit/:courseId\",\n                        \"/edit/:courseId/modules/:moduleId\",\n                        \"/edit/:courseId/modules/:moduleId/lessons/:lessonId\",\n                        \"/edit/:courseId/modules/:moduleId/lessons/:lessonId/topics/:topicId\"\n                    ]}\n                           exact component={CourseEditorContainer}/>}/>\n                    <Link to=\"/course/table\" className=\"bottom-right\">Table</Link>\n                    <Link to=\"/course/grid\" className=\"bottom-right\">Grid</Link>\n                </div>\n            </Router>\n        )\n    }\n}","import {\n    DELETE_MODULE,\n    UPDATE_MODULE,\n    CREATE_MODULE\n        } from \"../actions/moduleActions\";\n\nconst initialState = {\n    modules: [],\n    module: {}\n}\n\nconst moduleReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case \"FIND_MODULE_BY_ID\":\n            return {\n                ...state,\n                module: action.module\n            }\n        case \"FIND_MODULES_FOR_COURSE\":\n            return {\n                ...state,\n                modules: action.modules\n            }\n        case CREATE_MODULE:\n            return {\n                ...state,\n                modules: [\n                    ...state.modules,\n                    action.module\n                ]\n            }\n        case DELETE_MODULE:\n            return {\n                modules: state.modules.filter(module => module._id !== action.module._id)\n            }\n        case UPDATE_MODULE:\n            return {\n                modules: state.modules.map(module => module._id === action.module._id? action.module : module)\n            }\n        default:\n            return state\n    }\n}\n\nexport default moduleReducer","import {\n    DELETE_LESSON,\n    CREATE_LESSON,\n    EDIT_LESSON\n} from \"../actions/lessonsActions\";\n\nconst initialState = {\n    lessons: [],\n    lesson: {},\n    moduleId: \"\"\n}\n\nconst lessonReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"FIND_LESSON_BY_ID\":\n            return {\n                ...state,\n                lesson: action.lesson\n            }\n        case \"FIND_LESSONS_FOR_MODULE\":\n            return {\n                ...state,\n                lessons: action.lessons,\n                moduleId: action.moduleId\n            }\n        case CREATE_LESSON:\n            return {\n                ...state,\n                lessons: [\n                    ...state.lessons,\n                    action.lesson\n                ],\n                moduleId: action.moduleId\n            }\n        case DELETE_LESSON:\n            return {\n                ...state,\n                lessons: state.lessons.filter(lesson => lesson._id !== action.lesson._id)\n            }\n        case EDIT_LESSON:\n            return {\n                ...state,\n                lessons: state.lessons.map(lesson => lesson._id === action.lesson._id? action.lesson : lesson)\n            }\n        default:\n            return state\n    }\n}\n\nexport default lessonReducer","import {\n    DELETE_TOPIC,\n    CREATE_TOPIC,\n    UPDATE_TOPIC\n} from \"../actions/topicsActions\";\n\nconst initialState = {\n    topics: [],\n    topic: {},\n    lessonId: \"\"\n}\n\nconst topicReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"FIND_TOPIC_BY_ID\":\n            return {\n                ...state,\n                topic: action.topic\n            }\n        case \"FIND_TOPICS_FOR_LESSON\":\n            return {\n                ...state,\n                topics: action.topics,\n                lessonId: action.lessonId\n            }\n        case DELETE_TOPIC:\n            return {\n                ...state,\n                topics: state.topics.filter(topic => topic._id !== action.topic._id)\n            }\n        case CREATE_TOPIC:\n            return {\n                ...state,\n                topics: [\n                    ...state.topics,\n                    action.topic\n                ],\n                lessonId: action.lessonId\n            }\n        case UPDATE_TOPIC:\n            return {\n                ...state,\n                topics: state.topics.map(topic => topic._id === action.topic._id? action.topic : topic)\n            }\n        default:\n            return state\n    }\n}\n\nexport default topicReducer","const initialState = {\n    courses: [],\n    course: {}\n}\n\nconst courseReducer = (state=initialState, action) => {\n    switch(action.type) {\n        case \"FIND_COURSE_BY_ID\":\n            return {\n                ...state,\n                course: action.course\n            }\n        default:\n            return state\n    }\n}\n\nexport default courseReducer","const widgetReducer = (state ={}, action) => {\n    switch(action.type) {\n        case \"CREATE_WIDGET_FOR_TOPIC\":\n            return {\n                ...state,\n                widgets: [\n                    ...state.widgets,\n                    action.widget\n                ]\n            }\n        case \"FIND_WIDGETS_FOR_TOPIC\":\n            return {\n                ...state,\n                widgets: action.widgets,\n                // TODO: WHY is this necessary here too?\n                topicId: action.topicId\n            }\n        case \"DELETE_WIDGET\":\n            return {\n                ...state,\n                widgets: state.widgets.filter(widget => widget.id !== action.widget.id)\n            }\n        case \"UPDATE_WIDGET\":\n            return {\n                widgets: state.widgets.map(widget => widget.id === action.widget.id? action.widget : widget)\n            }\n        case \"FIND_ALL_WIDGETS\":\n            return {\n                widgets: action.widgets\n            }\n        case \"FIND_WIDGET\":\n            return {\n                ...state,\n                widget: action.widget\n            }\n        case \"MOVE_WIDGET_UP\":\n            return {\n                ...state,\n                widget: action.widget,\n                widgets: action.widgets,\n                topic: action.topicId\n            }\n        case \"MOVE_WIDGET_DOWN\":\n            return {\n                ...state,\n                widget: action.widget,\n                widgets: action.widgets,\n                topic: action.topicId\n            }\n        default:\n            return state\n    }\n}\n\n\nexport default widgetReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"font-awesome/css/font-awesome.css\"\nimport {CourseManagerContainer} from \"./containers/CourseManagerContainer\";\nimport {combineReducers, createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport moduleReducer from \"./reducers/modulesReducer\";\nimport lessonReducer from \"./reducers/lessonsReducer\";\nimport topicReducer from \"./reducers/topicsReducer\";\nimport courseReducer from \"./reducers/courseReducer\";\nimport widgetReducer from \"./reducers/widgetReducer\";\n\nconst rootReducer = combineReducers({\n    courseReducer: courseReducer,\n    moduleReducer: moduleReducer,\n    lessonReducer: lessonReducer,\n    topicReducer: topicReducer,\n    widgetReducer: widgetReducer\n})\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n    <Provider store={store}>\n        <CourseManagerContainer/>\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}